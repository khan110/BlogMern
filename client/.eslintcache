[{"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/index.js":"1","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/reportWebVitals.js":"2","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/App.js":"3","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Home.js":"4","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/users/List.js":"5","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/users/Add.js":"6","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/posts/Add.js":"7","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/posts/List.js":"8","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Layout/Layout.js":"9","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Navbar.js":"10","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Tables/EditableTable.js":"11"},{"size":500,"mtime":1612191022933,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1611622461911,"results":"14","hashOfConfig":"13"},{"size":951,"mtime":1612203749622,"results":"15","hashOfConfig":"13"},{"size":194,"mtime":1612203749624,"results":"16","hashOfConfig":"13"},{"size":1489,"mtime":1612203749632,"results":"17","hashOfConfig":"13"},{"size":1572,"mtime":1612203749631,"results":"18","hashOfConfig":"13"},{"size":1559,"mtime":1612203749629,"results":"19","hashOfConfig":"13"},{"size":1093,"mtime":1612203749630,"results":"20","hashOfConfig":"13"},{"size":207,"mtime":1612203749625,"results":"21","hashOfConfig":"13"},{"size":1165,"mtime":1612203749626,"results":"22","hashOfConfig":"13"},{"size":1852,"mtime":1612203749629,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"tspmty",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/index.js",[],["51","52"],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/reportWebVitals.js",[],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/App.js",[],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Home.js",["53"],"import React from 'react'\nimport Navbar from './Navbar'\n\nexport default function Home() {\n    return (\n        <div>\n           <h1> Welcome to Crud App - MERN BLog</h1> \n        </div>\n    )\n}\n","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/users/List.js",["54","55"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport Editable from '../Tables/EditableTable';\nimport AddUser from './Add';\n\nfunction List() {\n    const [users, setusers] = useState([]);\n    const [col, setcol] = useState([\n        { title: 'Name', field: 'name' },\n        { title: 'UserName', field: 'usrname', initialEditValue: '' },\n        { title: 'Email', field: 'email' },\n        { title: 'Phone#', field: 'phno'},\n      ])\n    //http://localhost:4000/api/users/\n    // useEffect(\n    //     ()=>{\n    //         const fetchUsers = async ()=>{\n    //         const myusers = await axios.get('http://localhost:4000/api/users/')\n    //         console.log(\" fetchUsers ~ myusers\", myusers)\n    //         setusers(myusers.data)\n    //     } \n    //            fetchUsers();\n    //     },\n    //    []\n    // )\n    useEffect(\n        ()=>{\n            axios.get('http://localhost:4000/api/users/')\n            .then(res=>{\n                setusers(res.data)\n            })\n            .catch(err=>console.log(err))\n\n        }, []\n    )\n    console.log(users)\n    return (\n        <div>\n            <Editable row={users} col={col} />\n           \n            {/* {\n                users.map((item)=>(\n                    <>\n                    <div>{item.name}</div>\n                    <div>{item.email}</div>\n                    <div>{item.phno}</div>\n                    </>\n                ))\n            } */}\n        </div>\n    )\n}\n\nexport default List\n","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/users/Add.js",[],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/posts/Add.js",[],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/posts/List.js",["56"],"import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport Editable from '../Tables/EditableTable';\n\nfunction PostList() {\n    const [posts, setposts] = useState([]);\n    const [col, setcol] = useState([\n        { title: 'title', field: 'title' },\n        { title: 'description', field: 'description', initialEditValue: '' },\n        { title: 'author', field: 'author' },\n      ])\n\n    useEffect(\n        ()=>{\n            axios.get('http://localhost:4000/api/posts/')\n            .then(res=>{\n                console.log(res);\n                setposts(res.data.posts)\n            })\n            .catch(err=>console.log(err))\n\n        }, []\n    )\n    console.log(posts)\n    return (\n        <div>\n            <Editable row={posts} col={col} />\n           \n            {/* {\n                posts.map((item)=>(\n                    <>\n                    <div>{item.name}</div>\n                    <div>{item.email}</div>\n                    <div>{item.phno}</div>\n                    </>\n                ))\n            } */}\n        </div>\n    )\n}\n\nexport default PostList\n","/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Layout/Layout.js",[],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Navbar.js",[],"/Users/umairalikhan/Documents/GitHub/BlogMern/client/src/components/Tables/EditableTable.js",["57"],"import React, { useState,useEffect }from 'react'\nimport MaterialTable from 'material-table'\n\nfunction Editable({row,col}) {\n    console.log(row)\n  \n    const [columns, setColumns] = useState(col);\n  \n    const [data, setData] = useState([]);\nuseEffect(() => {\n  setData(row)\n}, [row]);\n    //   const [data, setData] = useState([\n//     {\n//       id: 1,\n//       name:'faiza',\n//       usrname: 'fazzyA',\n//       email:'faz.pak@gmail.com',\n//       phno:'3340242139'\n//   },\n//   {\n//       id: 2,\n//       name:'umair2',\n//       usrname: 'umair90',\n//       email:'umair@gmail.com',\n//       phno:'3340242139'\n\n//   }\n\n// ]);\n    console.log(data)  \n    return (\n      <MaterialTable\n        title=\"Editable Preview\"\n        columns={columns}\n        data={data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setData([...data, newData]);\n                \n                resolve();\n              }, 1000)\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n  \n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: \n          oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                \n                resolve()\n              }, 1000)\n            }),\n        }}\n      />\n    )\n  }\n  export default Editable",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"62","severity":1,"message":"66","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":8,"column":17,"nodeType":"64","messageId":"65","endLine":8,"endColumn":23},{"ruleId":"62","severity":1,"message":"67","line":7,"column":17,"nodeType":"64","messageId":"65","endLine":7,"endColumn":23},{"ruleId":"62","severity":1,"message":"68","line":7,"column":21,"nodeType":"64","messageId":"65","endLine":7,"endColumn":31},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'AddUser' is defined but never used.","'setcol' is assigned a value but never used.","'setColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]